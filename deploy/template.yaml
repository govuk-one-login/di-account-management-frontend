AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  This creates the necessary components to deploy the Account Management
  Frontend onto ECS Fargate.
  Account Management Frontend can be invoked via the CloudFront Distribution,
  use the CloudFrontDistributionEndpoint URL exported by this stack.
  The ingress route in summary is:
  CloudFront -> WAF -> API Gateway -> VPC link -> Private ALB -> ECS Fargate

Parameters:
  VpcStackName:
    Description: >
      The name of the stack that defines the VPC in which this container will run.
    Type: String
  CodeSigningConfigArn:
    Type: String
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline.
    Default: "none"
  PermissionsBoundary:
    Description: >
      The ARN of the permissions boundary to apply when creating IAM roles.
    Type: String
    Default: none
  Environment:
    Description: The name of the environment to deploy to
    Type: String
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    Default: dev
  NotificationTopicArn:
    Description: "The ARN of the SNS topic used for notifications"
    Type: "String"
    Default: "none"
  ELB4XXAlarmMetric:
    Description: >
      Metric to be monitored by ELB4XXAlarm. This enables alarm
      to monitor for 4XX errors originated from the Target Group
      OR the Application Load Balancer.
    Type: String
    Default: HTTPCode_Target_4XX_Count
    AllowedValues:
      - HTTPCode_Target_4XX_Count
      - HTTPCode_ELB_4XX_Count
  AlertingStackName:
    Description: The name of the stack that defines the Alerting resources
    Type: String
    Default: platform-alerting
  BackendStackName:
    Description: The name of the backend stack
    Type: String
    Default: account-mgmt-backend
  StubsStackName:
    Description: The name of the stubs stack
    Type: String
    Default: account-mgmt-stubs
  ContainerPort:
    Description: The port on which the container is running
    Type: Number
    Default: 6001
  ProductTagValue:
    Description: Value for the Product Tag
    Type: String
    Default: GOV.UK Sign In
  OwnerTagValue:
    Description: Value for the Owner Tag
    Type: String
    Default: govuk-accounts-tech@digital.cabinet-office.gov.uk
  SourceTagValue:
    Description: Value for the Source Tag
    Type: String
    Default: govuk-one-login/di-account-management-frontend/deploy/template.yaml
  SystemTagValue:
    Description: Value for the System Tag
    Type: String
    Default: Accounts
  ServiceStoreTableName:
    Type: String
    Default: user_services
  ActivityLogTableName:
    Type: String
    Default: activity_log

Conditions:
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"

  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"

  UseAlarmActions:
    Fn::Not:
      - Fn::Equals:
          - !Ref NotificationTopicArn
          - "none"

  IsProduction: !Equals [!Ref Environment, production]

  UseStubServices: !Or
    - !Equals [!Ref Environment, build]
    - !Equals [!Ref Environment, dev]

  UseCloudFrontCaching: !Or
    - !Equals [!Ref Environment, staging]
    - !Equals [!Ref Environment, build]

  ExportLogsToSplunk:
    Fn::Or:
      - !Equals [!Ref Environment, staging]
      - !Equals [!Ref Environment, integration]
      - !Equals [!Ref Environment, production]

  UseCanaryDeployment: !Or
    - !Equals [!Ref Environment, production]
    - !Equals [!Ref Environment, integration]

Mappings:
  ElasticLoadBalancerAccountIds:
    eu-west-2:
      AccountId: 652711504416
  Container:
    dev:
      CPU: 1024
      Memory: 2048
      MinCapacity: 16
      MaxCapacity: 100
    build:
      CPU: 1024
      Memory: 2048
      MinCapacity: 16
      MaxCapacity: 100
    staging:
      CPU: 1024
      Memory: 2048
      MinCapacity: 16
      MaxCapacity: 100
    integration:
      CPU: 1024
      Memory: 2048
      MinCapacity: 16
      MaxCapacity: 100
    production:
      CPU: 1024
      Memory: 2048
      MinCapacity: 16
      MaxCapacity: 100
  EnvironmentVariables:
    ### These environment variables are referenced further down the file.
    ### Please ensure that any variables defined for an environment are defined for _all_ environments.
    dev:
      NODEENV: "production"
      APIBASEURL: "https://oidc.staging.account.gov.uk"
      AMAPIBASEURL: "https://manage.staging.account.gov.uk"
      BASEURL: "home.dev.account.gov.uk"
      SESSIONEXPIRY: "7200000"
      AMYOURACCOUNTURL: "https://www.staging.publishing.service.gov.uk/account/home"
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.staging.publishing.service.gov.uk"
      SUPPORTACTIVITYLOG: "1"
      REPORTSUSPICIOUSACTIVITY: "0"
      SUPPORTLANGUAGECY: "1"
      AUTHFRONTENDURL: "signin.staging.account.gov.uk"
      ANALYTICSCOOKIEDOMAIN: "dev.account.gov.uk"
      SERVICEDOMAIN: "dev.account.gov.uk"
      LOGSLEVEL: "debug"
      SUPPORTTRIAGEPAGE: "1"
      WEBCHATSOURCEURL: "https://dev-chat-loader.smartagent.app"
      SUPPORTWEBCHATCONTACT: "1"
      SUPPORTPHONECONTACT: "1"
      SHOWCONTACTGUIDANCE: "1"
      SHOWCONTACTEMERGENCYMESSAGE: "0"
      SUPPORTSEARCHABLELIST: "1"
      CONTACTEMAILSERVICEURL: "https://signin.staging.account.gov.uk/contact-us-from-triage-page"
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      METHODMANAGEMENTBASEURL: "https://method-management-v1-stub.home.dev.account.gov.uk"
      SUPPORTMETHODMANAGEMENT: "1"
      UNIVERSALANALYTICSGTMCONTAINERID: "GTM-TK92W68"
      GOOGLEANALYTICS4GTMCONTAINERID: "GTM-KD86CMZ"
      GA4ENABLED: "true"
      UAENABLED: "true"
      SELECTTRACKINGENABLED: "true"
      SUPPORTADDBACKUPMFA: "1"
      SUPPORTCHANGEMFA: "1"
      ACCESSIBILITYSTATEMENTURL: "https://signin.account.gov.uk/accessibility-statement"
      LANGUAGETOGGLE: "1"
      DTRUMURL: ""
      MISSIONLABWEBSOCKETADDR: "wss://s9hlnv7y91.execute-api.eu-west-2.amazonaws.com"
    build:
      NODEENV: "production"
      APIBASEURL: "https://oidc.build.account.gov.uk"
      AMAPIBASEURL: "https://manage.build.account.gov.uk"
      BASEURL: "home.build.account.gov.uk"
      SESSIONEXPIRY: "7200000"
      AMYOURACCOUNTURL: "https://www.staging.publishing.service.gov.uk/account/home"
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.staging.publishing.service.gov.uk"
      SUPPORTACTIVITYLOG: "1"
      REPORTSUSPICIOUSACTIVITY: "0"
      SUPPORTLANGUAGECY: "1"
      AUTHFRONTENDURL: "signin.build.account.gov.uk"
      ANALYTICSCOOKIEDOMAIN: "build.account.gov.uk"
      SERVICEDOMAIN: "build.account.gov.uk"
      LOGSLEVEL: "debug"
      SUPPORTTRIAGEPAGE: "1"
      WEBCHATSOURCEURL: "https://uat-chat-loader.smartagent.app"
      SUPPORTWEBCHATCONTACT: "1"
      SUPPORTPHONECONTACT: "0"
      SHOWCONTACTGUIDANCE: "1"
      SUPPORTSEARCHABLELIST: "1"
      SHOWCONTACTEMERGENCYMESSAGE: "0"
      CONTACTEMAILSERVICEURL: "https://signin.staging.account.gov.uk/contact-us-from-triage-page"
      METHODMANAGEMENTBASEURL: "https://method-management-v1-stub.home.build.account.gov.uk"
      SUPPORTMETHODMANAGEMENT: "0"
      SUPPORTADDBACKUPMFA: "0"
      SUPPORTCHANGEMFA: "0"
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      ACCESSIBILITYSTATEMENTURL: "https://signin.account.gov.uk/accessibility-statement"
      UNIVERSALANALYTICSGTMCONTAINERID: "GTM-TK92W68"
      GOOGLEANALYTICS4GTMCONTAINERID: "GTM-KD86CMZ"
      GA4ENABLED: "true"
      UAENABLED: "true"
      SELECTTRACKINGENABLED: "true"
      LANGUAGETOGGLE: "1"
      DTRUMURL: ""
      MISSIONLABWEBSOCKETADDR: "wss://s9hlnv7y91.execute-api.eu-west-2.amazonaws.com"
    staging:
      NODEENV: "production"
      APIBASEURL: "https://oidc.staging.account.gov.uk"
      AMAPIBASEURL: "https://manage.staging.account.gov.uk"
      BASEURL: "home.staging.account.gov.uk"
      SESSIONEXPIRY: "7200000"
      AMYOURACCOUNTURL: "https://www.staging.publishing.service.gov.uk/account/home"
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.staging.publishing.service.gov.uk"
      SUPPORTACTIVITYLOG: "1"
      REPORTSUSPICIOUSACTIVITY: "0"
      SUPPORTLANGUAGECY: "1"
      AUTHFRONTENDURL: "signin.staging.account.gov.uk"
      ANALYTICSCOOKIEDOMAIN: "staging.account.gov.uk"
      SERVICEDOMAIN: "staging.account.gov.uk"
      LOGSLEVEL: "info"
      SUPPORTTRIAGEPAGE: "1"
      WEBCHATSOURCEURL: "https://uat-chat-loader.smartagent.app"
      SUPPORTWEBCHATCONTACT: "1"
      SUPPORTPHONECONTACT: "1"
      SHOWCONTACTGUIDANCE: "1"
      SUPPORTSEARCHABLELIST: "1"
      SHOWCONTACTEMERGENCYMESSAGE: "0"
      CONTACTEMAILSERVICEURL: "https://signin.staging.account.gov.uk/contact-us-from-triage-page"
      METHODMANAGEMENTBASEURL: "https://method-management-v1-stub.home.staging.account.gov.uk"
      SUPPORTMETHODMANAGEMENT: "0"
      SUPPORTADDBACKUPMFA: "0"
      SUPPORTCHANGEMFA: "0"
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      UNIVERSALANALYTICSGTMCONTAINERID: "GTM-TK92W68"
      GOOGLEANALYTICS4GTMCONTAINERID: "GTM-KD86CMZ"
      GA4ENABLED: "true"
      UAENABLED: "true"
      SELECTTRACKINGENABLED: "true"
      ACCESSIBILITYSTATEMENTURL: "https://signin.account.gov.uk/accessibility-statement"
      LANGUAGETOGGLE: "1"
      DTRUMURL: "https://js-cdn.dynatrace.com/jstag/17177a07246/bf01311dte/e87dc9cd0e7082fb_complete.js"
      MISSIONLABWEBSOCKETADDR: "wss://sqs8l2bqn1.execute-api.eu-west-2.amazonaws.com"
    integration:
      NODEENV: "production"
      APIBASEURL: "https://oidc.integration.account.gov.uk"
      AMAPIBASEURL: "https://manage.integration.account.gov.uk"
      BASEURL: "home.integration.account.gov.uk"
      SESSIONEXPIRY: "7200000"
      AMYOURACCOUNTURL: "https://www.integration.publishing.service.gov.uk/account/home"
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.integration.publishing.service.gov.uk"
      SUPPORTACTIVITYLOG: "1"
      REPORTSUSPICIOUSACTIVITY: "0"
      SUPPORTLANGUAGECY: "1"
      AUTHFRONTENDURL: "signin.integration.account.gov.uk"
      ANALYTICSCOOKIEDOMAIN: "integration.account.gov.uk"
      SERVICEDOMAIN: "integration.account.gov.uk"
      LOGSLEVEL: "info"
      SUPPORTTRIAGEPAGE: "1"
      WEBCHATSOURCEURL: "https://uat-chat-loader.smartagent.app"
      SUPPORTWEBCHATCONTACT: "1"
      SUPPORTPHONECONTACT: "1"
      SHOWCONTACTGUIDANCE: "1"
      SUPPORTSEARCHABLELIST: "0"
      SHOWCONTACTEMERGENCYMESSAGE: "0"
      METHODMANAGEMENTBASEURL: "https://method-management-v1-stub.home.integration.account.gov.uk"
      SUPPORTMETHODMANAGEMENT: "0"
      SUPPORTADDBACKUPMFA: "0"
      SUPPORTCHANGEMFA: "0"
      CONTACTEMAILSERVICEURL: "https://signin.integration.account.gov.uk/contact-us-from-triage-page"
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      UNIVERSALANALYTICSGTMCONTAINERID: "TBD"
      GOOGLEANALYTICS4GTMCONTAINERID: "TBD"
      GA4ENABLED: "false"
      UAENABLED: "false"
      SELECTTRACKINGENABLED: "false"
      ACCESSIBILITYSTATEMENTURL: "https://signin.account.gov.uk/accessibility-statement"
      LANGUAGETOGGLE: "1"
      DTRUMURL: "https://js-cdn.dynatrace.com/jstag/17177a07246/bf01311dte/416cd438acc3a6f_complete.js"
      MISSIONLABWEBSOCKETADDR: "wss://sqs8l2bqn1.execute-api.eu-west-2.amazonaws.com"
    production:
      NODEENV: "production"
      APIBASEURL: "https://oidc.account.gov.uk"
      AMAPIBASEURL: "https://manage.account.gov.uk"
      BASEURL: "home.account.gov.uk"
      SESSIONEXPIRY: "7200000"
      AMYOURACCOUNTURL: "https://www.gov.uk/account/home"
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.publishing.service.gov.uk"
      SUPPORTACTIVITYLOG: "1"
      REPORTSUSPICIOUSACTIVITY: "0"
      SUPPORTLANGUAGECY: "1"
      AUTHFRONTENDURL: "signin.account.gov.uk"
      ANALYTICSCOOKIEDOMAIN: "account.gov.uk"
      SERVICEDOMAIN: "account.gov.uk"
      LOGSLEVEL: "info"
      SUPPORTTRIAGEPAGE: "1"
      WEBCHATSOURCEURL: "https://chat-loader.smartagent.app"
      SUPPORTWEBCHATCONTACT: "1"
      SUPPORTPHONECONTACT: "1"
      SHOWCONTACTGUIDANCE: "1"
      SUPPORTSEARCHABLELIST: "0"
      SHOWCONTACTEMERGENCYMESSAGE: "0"
      METHODMANAGEMENTBASEURL: ""
      SUPPORTMETHODMANAGEMENT: "0"
      SUPPORTCHANGEMFA: "0"
      SUPPORTADDBACKUPMFA: "0"
      CONTACTEMAILSERVICEURL: "https://signin.account.gov.uk/contact-us-from-triage-page"
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables
      UNIVERSALANALYTICSGTMCONTAINERID: "GTM-TT5HDKV"
      GOOGLEANALYTICS4GTMCONTAINERID: "GTM-K4PBJH3"
      GA4ENABLED: "true"
      UAENABLED: "true"
      SELECTTRACKINGENABLED: "false"
      ACCESSIBILITYSTATEMENTURL: "https://signin.account.gov.uk/accessibility-statement"
      LANGUAGETOGGLE: "1"
      DTRUMURL: "https://js-cdn.dynatrace.com/jstag/17177a07246/bf04188tda/b9835209cd235d3a_complete.js"
      MISSIONLABWEBSOCKETADDR: "wss://jxcr697tal.execute-api.eu-west-2.amazonaws.com"

Resources:
  #
  # Fargate Cluster
  #

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${AWS::StackName}-ECSCluster"
      CapacityProviders: !If
        - IsProduction
        - - "FARGATE"
        - - "FARGATE_SPOT"
      DefaultCapacityProviderStrategy:
        - CapacityProvider: !If [IsProduction, "FARGATE", "FARGATE_SPOT"]
          Weight: 1
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ECSCluster"
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Service
          Value: ci/cd
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue

  ContainerService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentController:
        Type: CODE_DEPLOY
      PropagateTags: SERVICE
      CapacityProviderStrategy:
        - CapacityProvider: !If [IsProduction, "FARGATE", "FARGATE_SPOT"]
          Weight: 1
      LoadBalancers:
        - ContainerName: !Sub "${AWS::StackName}-TaskDefinition"
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref ApplicationLoadBalancerTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !GetAtt ContainerServiceSecurityGroup.GroupId
          Subnets:
            - Fn::ImportValue: !Sub "${VpcStackName}-ProtectedSubnetIdA"
            - Fn::ImportValue: !Sub "${VpcStackName}-ProtectedSubnetIdB"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-ContainerService"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
    DependsOn: ApplicationLoadBalancerListenerHTTPS

  ContainerAutoScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: !FindInMap [Container, !Ref Environment, MaxCapacity]
      MinCapacity: !FindInMap [Container, !Ref Environment, MinCapacity]
      ResourceId: !Join
        - "/"
        - - "service"
          - !Ref ECSCluster
          - !GetAtt ContainerService.Name
      RoleARN: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  ECSStepScaleOutPolicy:
    DependsOn: ContainerAutoScalingTarget
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ECSStepScalingOutPolicy
      PolicyType: StepScaling
      ResourceId: !Join
        - "/"
        - - "service"
          - !Ref ECSCluster
          - !GetAtt ContainerService.Name
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 30
        StepAdjustments: # Bounds are calculated based on difference from alarm threshold
          - MetricIntervalUpperBound: 10 #50%
            ScalingAdjustment: 30
          - MetricIntervalLowerBound: 10 #50%
            MetricIntervalUpperBound: 30 #70%
            ScalingAdjustment: 60
          - MetricIntervalLowerBound: 30 #70%
            ScalingAdjustment: 100

  ECSStepScaleInPolicy:
    DependsOn: ContainerAutoScalingTarget
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ECSStepScalingInPolicy
      PolicyType: StepScaling
      ResourceId: !Join
        - "/"
        - - "service"
          - !Ref ECSCluster
          - !GetAtt ContainerService.Name
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 30
        StepAdjustments: # Bounds are calculated based on difference from alarm threshold
          - MetricIntervalLowerBound: -10 #30%
            MetricIntervalUpperBound: 0 #40%
            ScalingAdjustment: -10
          - MetricIntervalLowerBound: -20 #20%
            MetricIntervalUpperBound: -10 #30%
            ScalingAdjustment: -20
          - MetricIntervalUpperBound: -20 #30%
            ScalingAdjustment: -50

  ECSStepScaleOutAlarm:
    DependsOn: ContainerAutoScalingTarget
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref ECSStepScaleOutPolicy
      AlarmDescription: "ECSClusterOver40PercentCPU"
      ComparisonOperator: "GreaterThanThreshold"
      DatapointsToAlarm: "2"
      Dimensions:
        - Name: ClusterName
          Value: !Ref ECSCluster
        - Name: ServiceName
          Value: !GetAtt ContainerService.Name
      Unit: "Percent"
      EvaluationPeriods: "2"
      MetricName: "CPUUtilization"
      Namespace: "AWS/ECS"
      Statistic: "Average"
      Period: "60"
      Threshold: "40"

  # Utilising ADR 0140
  ECSStepScaleInAlarm:
    DependsOn: ContainerAutoScalingTarget
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref ECSStepScaleInPolicy
      AlarmDescription: "ECSClusterUnder40PercentCPU"
      ComparisonOperator: "LessThanThreshold"
      DatapointsToAlarm: "5"
      Dimensions:
        - Name: ClusterName
          Value: !Ref ECSCluster
        - Name: ServiceName
          Value: !GetAtt ContainerService.Name
      Unit: "Percent"
      EvaluationPeriods: "5"
      MetricName: "CPUUtilization"
      Namespace: "AWS/ECS"
      Statistic: "Average"
      Period: "60"
      Threshold: "40"

  ContainerServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Security Group to access the ${AWS::StackName} Container Service"
      GroupName: !Join
        - "-"
        - - !Ref AWS::StackName
          - ContainerService
          - Fn::Select:
              - 4
              - Fn::Split:
                  - "-"
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - "/"
                          - Ref: AWS::StackId
      SecurityGroupIngress:
        - Description: !Sub "Allow traffic from the load balancer on port ${ContainerPort}"
          SourceSecurityGroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
          IpProtocol: tcp
          FromPort: !Ref ContainerPort
          ToPort: !Ref ContainerPort
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcId"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ContainerServiceSecurityGroup"
        - Key: Service
          Value: ci/cd
        - Key: Source
          Value: SourceTagValue
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue

  ECSClusterNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub "The name of the ${AWS::StackName} ECS cluster"
      Name: !Sub "/${AWS::StackName}/ECS/Cluster"
      Type: String
      Value: !Ref ECSCluster
      Tags:
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue

  #
  # Fargate tasks
  #

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: !Sub "${AWS::StackName}-TaskDefinition"
          Image: "CONTAINER-IMAGE-PLACEHOLDER"
          PortMappings:
            - ContainerPort: !Ref ContainerPort
              Protocol: tcp
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref TaskLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-create-group: "true"
              awslogs-stream-prefix: "ecs"
          HealthCheck:
            Command:
              - "CMD-SHELL"
              - !Sub "curl -f http://localhost:${ContainerPort}/healthcheck || exit 1"
            Interval: 40
            Timeout: 10
            Retries: 5
            StartPeriod: 60
          Secrets:
            - Name: DT_TENANT
              ValueFrom: !Join
                - ""
                - - !FindInMap [
                      EnvironmentVariables,
                      !Ref Environment,
                      dynatraceSecretArn,
                    ]
                  - ":DT_TENANT::"
            - Name: DT_TENANTTOKEN
              ValueFrom: !Join
                - ""
                - - !FindInMap [
                      EnvironmentVariables,
                      !Ref Environment,
                      dynatraceSecretArn,
                    ]
                  - ":DT_TENANTTOKEN::"
            - Name: DT_CONNECTION_POINT
              ValueFrom: !Join
                - ""
                - - !FindInMap [
                      EnvironmentVariables,
                      !Ref Environment,
                      dynatraceSecretArn,
                    ]
                  - ":DT_CONNECTION_POINT::"
          Environment:
            - Name: "NODE_ENV"
              Value:
                !FindInMap [EnvironmentVariables, !Ref Environment, NODEENV]
            - Name: "APP_ENV"
              Value: !Sub "${Environment}"
            - Name: "API_BASE_URL"
              Value:
                !If [
                  UseStubServices,
                  !Sub "https://{{resolve:ssm:/${StubsStackName}/Stub/OIDC}}",
                  !FindInMap [
                    EnvironmentVariables,
                    !Ref Environment,
                    APIBASEURL,
                  ],
                ]
            - Name: "AM_API_BASE_URL"
              Value:
                !If [
                  UseStubServices,
                  !Sub "https://{{resolve:ssm:/${StubsStackName}/Stub/AccountManagement/Endpoint}}",
                  !FindInMap [
                    EnvironmentVariables,
                    !Ref Environment,
                    AMAPIBASEURL,
                  ],
                ]
            - Name: "SUPPORT_ACTIVITY_LOG"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTACTIVITYLOG,
                ]
            - Name: "REPORT_SUSPICIOUS_ACTIVITY"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  REPORTSUSPICIOUSACTIVITY,
                ]
            - Name: "BASE_URL"
              Value:
                !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
            - Name: "OIDC_CLIENT_ID"
              Value: !Sub "{{resolve:ssm:/${AWS::StackName}/Config/OIDC/Client/Id}}"
            - Name: "OIDC_CLIENT_SCOPES"
              Value: "openid phone email am offline_access govuk-account"
            - Name: "SESSION_EXPIRY"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SESSIONEXPIRY,
                ]
            - Name: "SESSION_SECRET"
              Value: !Sub "{{resolve:secretsmanager:${SessionSecret}}}"
            - Name: "AM_YOUR_ACCOUNT_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  AMYOURACCOUNTURL,
                ]
            - Name: "GTM_ID"
              Value: !Sub "{{resolve:ssm:/${AWS::StackName}/Config/GTM/Id}}"
            - Name: "GOV_ACCOUNTS_PUBLISHING_API_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  GOVACCOUNTSPUBLISHINGAPIURL,
                ]
            - Name: "GOV_ACCOUNTS_PUBLISHING_API_TOKEN"
              Value: !Sub "{{resolve:secretsmanager:/${AWS::StackName}/Config/Publishing/API/Key}}"
            - Name: "SUPPORT_LANGUAGE_CY"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTLANGUAGECY,
                ]
            - Name: "AUTH_FRONTEND_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  AUTHFRONTENDURL,
                ]
            - Name: "ANALYTICS_COOKIE_DOMAIN"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  ANALYTICSCOOKIEDOMAIN,
                ]
            - Name: "SESSION_STORE_TABLE_NAME"
              Value: !Ref SessionsDynamoDB
            - Name: "KMS_KEY_ID"
              Value: !Sub "{{resolve:ssm:/${AWS::StackName}/KMS/JwtSigningKey/Id}}"
            - Name: "SERVICE_DOMAIN"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SERVICEDOMAIN,
                ]
            - Name: "LOGS_LEVEL"
              Value:
                !FindInMap [EnvironmentVariables, !Ref Environment, LOGSLEVEL]
            - Name: "DELETE_TOPIC_ARN"
              Value: !Sub "{{resolve:ssm:/${BackendStackName}/SNS/DeleteTopic/ARN}}"
            - Name: "SUSPICIOUS_ACTIVITY_TOPIC_ARN"
              Value: !Sub "{{resolve:ssm:/${BackendStackName}/SNS/SuspiciousActivity/ARN}}"
            - Name: "SERVICE_STORE_TABLE_NAME"
              Value: !Ref ServiceStoreTableName
            - Name: "ACTIVITY_LOG_STORE_TABLE_NAME"
              Value: !Ref ActivityLogTableName
            - Name: "SUPPORT_TRIAGE_PAGE"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTTRIAGEPAGE,
                ]
            - Name: "WEBCHAT_SOURCE_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  WEBCHATSOURCEURL,
                ]
            - Name: "SUPPORT_WEBCHAT_CONTACT"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTWEBCHATCONTACT,
                ]
            - Name: "SUPPORT_PHONE_CONTACT"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTPHONECONTACT,
                ]
            - Name: "SHOW_CONTACT_GUIDANCE"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SHOWCONTACTGUIDANCE,
                ]
            - Name: "SHOW_CONTACT_EMERGENCY_MESSAGE"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SHOWCONTACTEMERGENCYMESSAGE,
                ]
            - Name: "CONTACT_EMAIL_SERVICE_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  CONTACTEMAILSERVICEURL,
                ]
            - Name: "SUPPORT_METHOD_MANAGEMENT"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTMETHODMANAGEMENT,
                ]
            - Name: "SUPPORT_SEARCHABLE_LIST"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTSEARCHABLELIST,
                ]
            - Name: "SUPPORT_CHANGE_MFA"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTCHANGEMFA,
                ]
            - Name: "SUPPORT_ADD_BACKUP_MFA"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTADDBACKUPMFA,
                ]
            - Name: "METHOD_MANAGEMENT_BASE_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  METHODMANAGEMENTBASEURL,
                ]
            - Name: "AUDIT_QUEUE_URL"
              Value: !Sub "{{resolve:ssm:/${BackendStackName}/SQS/AuditQueue/URL}}"
            - Name: "AUDIT_QUEUE_DLQ_URL"
              Value: !Ref TxMAPublishErrorDeadLetterQueue
            - Name: "GENERATOR_KEY_ARN"
              Value: !ImportValue
                "Fn::Sub": "${BackendStackName}-GeneratorKey"
            - Name: "WRAPPING_KEY_ARN"
              Value: !ImportValue
                "Fn::Sub": "${BackendStackName}-WrappingKey"
            - Name: "ACCOUNT_ID"
              Value: !Sub "${AWS::AccountId}"
            - Name: "ENVIRONMENT"
              Value: !Ref Environment
            - Name: "VERIFY_ACCESS_VALUE"
              Value: !Sub "{{resolve:secretsmanager:/${BackendStackName}/Config/Storage/VerificationSecret}}"
            - Name: "UNIVERSAL_ANALYTICS_GTM_CONTAINER_ID"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  UNIVERSALANALYTICSGTMCONTAINERID,
                ]
            - Name: "GOOGLE_ANALYTICS_4_GTM_CONTAINER_ID"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  GOOGLEANALYTICS4GTMCONTAINERID,
                ]
            - Name: "GA4_ENABLED"
              Value:
                !FindInMap [EnvironmentVariables, !Ref Environment, GA4ENABLED]
            - Name: "UA_ENABLED"
              Value:
                !FindInMap [EnvironmentVariables, !Ref Environment, UAENABLED]
            - Name: "SELECT_TRACKING_ENABLED"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SELECTTRACKINGENABLED,
                ]
            - Name: "ACCESSIBILITY_STATEMENT_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  ACCESSIBILITYSTATEMENTURL,
                ]
            - Name: "LANGUAGE_TOGGLE"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  LANGUAGETOGGLE,
                ]
            - Name: "DT_RUM_URL"
              Value:
                !FindInMap [EnvironmentVariables, !Ref Environment, DTRUMURL]
            - Name: "MISSION_LAB_WEBSOCKET_ADDR"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  MISSIONLABWEBSOCKETADDR,
                ]
      Cpu: !FindInMap [Container, !Ref Environment, CPU]
      Memory: !FindInMap [Container, !Ref Environment, Memory]
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      TaskRoleArn: !GetAtt TaskRole.Arn
      Family: !Sub "${AWS::StackName}-server"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-TaskDefinition"
        - Key: Service
          Value: ci/cd
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-TaskExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
      Policies:
        - PolicyName: CreateLogGroup
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                Resource:
                  - !GetAtt TaskLogGroup.Arn
                  - !Sub "${TaskLogGroup.Arn}:*"
        - PolicyName: !Sub "${AWS::StackName}-DynatraceSecretsPolicy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:ListSecrets # pragma: allowlist secret
                  - secretsmanager:GetSecretValue # pragma: allowlist secret
                Resource:
                  - arn:aws:secretsmanager:eu-west-2:216552277552:secret:* # pragma: allowlist secret
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource:
                  - arn:aws:kms:eu-west-2:216552277552:key/*
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-TaskExecutionRole"
        - Key: Service
          Value: ci/cd
        - Key: Source
          Value: SourceTagValue
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-TaskRole"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-TaskRolePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sns:Publish"
                Resource:
                  - !Sub "arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:UserAccountDeletion"
              - Effect: Allow
                Action:
                  - "kms:Decrypt"
                Resource:
                  - Fn::ImportValue: !Sub "${BackendStackName}-GeneratorKey"
              - Effect: Allow
                Action:
                  - "sns:Publish"
                Resource:
                  - !Sub "arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:SuspiciousActivity"
              - Effect: Allow
                Action:
                  - "ssm:GetParameters"
                Resource:
                  - !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/*"
                  - !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${BackendStackName}/SNS/DeleteTopic/ARN"
                  - !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${StubsStackName}/Stub/AccountManagement/Endpoint"
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource:
                  - !Sub "arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:/${AWS::StackName}/Config/Publishing/API/Key"
                  - !Sub "arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:/${AWS::StackName}/Config/Session/Secret"
                  - !Sub "arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${BackendStackName}/Config/Session/Secret"
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:GetItem
                Resource:
                  - !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ServiceStoreTableName}"
                  - !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ActivityLogTableName}"
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                Resource:
                  - !GetAtt SessionsDynamoDB.Arn
                  - !Sub "${SessionsDynamoDB.Arn}/index/users-sessions"
              - Effect: Allow
                Action:
                  - "kms:Sign"
                  - "kms:GetPublicKey"
                Resource:
                  - !Sub "arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/{{resolve:ssm:/${AWS::StackName}/KMS/JwtSigningKey/Id}}"
              - Effect: Allow
                Action:
                  - "kms:GenerateDataKey*"
                  - "kms:Decrypt"
                Resource:
                  - !Sub "arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/{{resolve:ssm:/${BackendStackName}/KMS/SnsKmsKey/ID}}"
                  - !Sub "arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/{{resolve:ssm:/${BackendStackName}/KMS/DatabaseKmsKey/ID}}"
                  - !GetAtt DynamoDBKmsKey.Arn
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey*
                  - kms:ReEncrypt*
                Resource: !Sub "{{resolve:ssm:/${BackendStackName}/KMS/AuditQueueKey/ARN}}"
              - Effect: Allow
                Action: sqs:SendMessage
                Resource: !Sub "{{resolve:ssm:/${BackendStackName}/SQS/AuditQueue/ARN}}"
        - PolicyName: !Sub "${AWS::StackName}-DynatraceSecretsPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource:
                  - "arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables"
                  - "arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables"
              - Effect: Allow
                Action:
                  - "kms:Decrypt"
                Resource:
                  - "arn:aws:kms:eu-west-2:216552277552:key/*"

      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-TaskRole"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  #
  # API Gateway
  #

  ApiGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub "${AWS::StackName}-Api"
      ProtocolType: HTTP
      Tags:
        Name: !Sub "${AWS::StackName}-ApiGateway"
        Service: ci/cd
        Source: !Ref SourceTagValue
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue

  ApiGatewayIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGateway
      IntegrationType: HTTP_PROXY
      ConnectionId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcLinkId"
      ConnectionType: VPC_LINK
      IntegrationMethod: ANY
      IntegrationUri: !Ref ApplicationLoadBalancerListenerHTTPS
      PayloadFormatVersion: 1.0
      Description: !Sub "API GW to ECS Container integration for ${AWS::StackName}"
      TlsConfig:
        ServerNameToVerify:
          !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]

  ApiRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGateway
      RouteKey: "ANY /{proxy+}"
      Target: !Sub "integrations/${ApiGatewayIntegration}"

  ApiDefaultStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref ApiGateway
      StageName: "$default"
      AutoDeploy: true
      AccessLogSettings:
        Format: >-
          {
          "requestId":"$context.requestId",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "domainName":"$context.domainName",
          "path": "$context.path",
          "routeKey":"$context.routeKey",
          "protocol":"$context.protocol",
          "status":"$context.status",
          "responseLength":"$context.responseLength",
          "responseLatency":"$context.responseLatency",
          "integrationStatus":"$context.integrationStatus",
          "integrationLatency":"$context.integrationLatency"
          "integrationErrorMessage":"$context.integrationErrorMessage",
          "errorMessage":"$context.error.message",
          "errorResponseType":"$context.error.responseType"
          }
        DestinationArn: !GetAtt ApiGatewayAccessLogGroup.Arn
      Tags:
        Name: !Sub "${AWS::StackName}-ApiDefaultStage"
        Service: ci/cd
        Source: !Ref SourceTagValue
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue

  #
  # Load balancing
  #

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internal
      Type: application
      SecurityGroups:
        - !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      Subnets:
        - Fn::ImportValue: !Sub "${VpcStackName}-ProtectedSubnetIdA"
        - Fn::ImportValue: !Sub "${VpcStackName}-ProtectedSubnetIdB"
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: "true"
        - Key: access_logs.s3.bucket
          Value: !Ref AccessLogsBucket
        - Key: routing.http.drop_invalid_header_fields.enabled
          Value: "true"
        - Key: deletion_protection.enabled
          Value: true
        - !Ref AWS::NoValue
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationLoadBalancer"
        - Key: Service
          Value: ci/cd
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue

  ApplicationLoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: TRUE
      HealthCheckProtocol: HTTP
      HealthCheckPath: /healthcheck
      HealthCheckTimeoutSeconds: 2
      HealthCheckIntervalSeconds: 5
      HealthyThresholdCount: 2
      HealthCheckPort: !Ref ContainerPort
      Port: !Ref ContainerPort
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Matcher:
        HttpCode: "200"
      TargetType: ip
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcId"
      TargetGroupAttributes:
        - Key: "deregistration_delay.timeout_seconds"
          Value: "62"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationLoadBalancerTargetGroup"
        - Key: Service
          Value: ci/cd
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue

  ApplicationLoadBalancerTargetGroupGreen:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPort: !Ref ContainerPort
      HealthCheckProtocol: HTTP
      HealthCheckPath: /healthcheck
      HealthCheckIntervalSeconds: 15
      Port: !Ref ContainerPort
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Matcher:
        HttpCode: "200"
      TargetType: ip
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcId"
      UnhealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: "deregistration_delay.timeout_seconds"
          Value: "62"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationLoadBalancerTargetGroupGreen"
        - Key: Service
          Value: ci/cd
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue

  ApplicationLoadBalancerListenerHTTP:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Port: 443
            Protocol: HTTPS
            StatusCode: HTTP_301
      LoadBalancerArn:
        Ref: ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
    Metadata:
      SamResourceId: ApplicationLoadBalancerListenerHTTP

  ApplicationLoadBalancerListenerHTTPS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      # checkov:skip=CKV_AWS_2:Certificate generation must be resolved before the listener can use HTTPS.
      # checkov:skip=CKV_AWS_103:The load balancer cannot use TLS v1.2 until HTTPS is enabled.
      DefaultActions:
        - TargetGroupArn: !Ref ApplicationLoadBalancerTargetGroup
          Type: forward
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Sub "{{resolve:ssm:/${Environment}/Platform/ACM/HostedZone/Certificate/Home/ARN}}"
      SslPolicy: "ELBSecurityPolicy-FS-1-2-Res-2020-10"

  ApplicationLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for the Application Load Balancer
      GroupName: !Join
        - "-"
        - - !Ref AWS::StackName
          - ApplicationLoadBalancer
          - Fn::Select:
              - 4
              - Fn::Split:
                  - "-"
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - "/"
                          - Ref: AWS::StackId
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcId"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationLoadBalancerSecurityGroup"
        - Key: Service
          Value: ci/cd
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue

  ApplicationLoadBalancerSecurityGroupIngressHTTP:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      CidrIp: 10.0.0.0/16
      Description: Allows HTTP traffic from anyone on port 80
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80

  ApplicationLoadBalancerSecurityGroupIngressHTTPS:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      CidrIp: 10.0.0.0/16
      Description: Allows HTTPS traffic from anyone on port 443
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443

  ApplicationLoadBalancerSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      DestinationSecurityGroupId: !GetAtt ContainerServiceSecurityGroup.GroupId
      Description: !Sub "Allow traffic to Container Service on port ${ContainerPort}"
      IpProtocol: tcp
      FromPort: !Ref ContainerPort
      ToPort: !Ref ContainerPort

  ApplicationLoadBalancerListenerRuleRobots:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            MessageBody: >
              "user-agent: *"
              "disallow: /"
              "allow: /contact-gov-uk-one-login"
            StatusCode: 200
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - "/robots.txt"
      ListenerArn: !Ref ApplicationLoadBalancerListenerHTTPS
      Priority: 10

  #
  # ECS Alarms
  #

  ELB5XX10PercentAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: >
        The number of HTTP 5XX server error codes that originate from the load balancer is greater than 10% of all traffic.
        This count does not include any response codes generated by the targets.
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: missing
      Metrics:
        - Id: e1
          Label: ErrorPercent
          ReturnData: true
          Expression: (m1/m2)*100
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApplicationELB
              MetricName: HTTPCode_ELB_5XX_Count
              Dimensions:
                - Name: LoadBalancer
                  Value: !Ref ApplicationLoadBalancer
            Period: 60
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApplicationELB
              MetricName: RequestCount
              Dimensions:
                - Name: LoadBalancer
                  Value: !Ref ApplicationLoadBalancer
            Period: 60
            Stat: Sum

  ELB5XXAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: >
        The number of HTTP 5XX server error codes that originate from the load balancer.
        This count does not include any response codes generated by the targets.
      MetricName: HTTPCode_ELB_5XX_Count
      Namespace: AWS/ApplicationELB
      Statistic: Sum
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref ApplicationLoadBalancer
      Period: 60
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      Threshold: 2
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  ELB4XXAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: >
        The number of HTTP 4XX server error codes that originate from the load balancer.
        This count does not include any response codes generated by the targets.
      MetricName: !Ref ELB4XXAlarmMetric
      Namespace: AWS/ApplicationELB
      Statistic: Sum
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref ApplicationLoadBalancer
      Period: 60
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      Threshold: 2
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  #
  # Anomaly detection
  #

  ELB4XXAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: HTTPCode_ELB_4XX_Count
      Namespace: AWS/ApplicationELB
      Stat: Sum
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt ApplicationLoadBalancer.LoadBalancerFullName

  ELB5XXAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: HTTPCode_ELB_5XX_Count
      Namespace: AWS/ApplicationELB
      Stat: Sum
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt ApplicationLoadBalancer.LoadBalancerFullName

  ELB4XXAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: >
        Based on anomaly detection, the number of HTTP 4XX server error codes that
        originate from the load balancer. This count does not include any response
        codes generated by the targets.
      AlarmActions: !If
        - UseAlarmActions
        - - !Ref NotificationTopicArn
        - []
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      ThresholdMetricId: ad1
      ComparisonOperator: GreaterThanUpperThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: true
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: true
          MetricStat:
            Metric:
              Namespace: AWS/ApplicationELB
              MetricName: HTTPCode_ELB_4XX_Count
              Dimensions:
                - Name: LoadBalancer
                  Value: !GetAtt ApplicationLoadBalancer.LoadBalancerFullName
            Period: 60
            Stat: Sum

  ELB5XXAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: >
        Based on anomaly detection, the number of HTTP 5XX server error codes that originate from the load balancer.
        This count does not include any response codes generated by the targets.
      AlarmActions: !If
        - UseAlarmActions
        - - !Ref NotificationTopicArn
        - []
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      ThresholdMetricId: ad2
      ComparisonOperator: GreaterThanUpperThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad2
          ReturnData: true
          Expression: ANOMALY_DETECTION_BAND(m2, 2)
        - Id: m2
          ReturnData: true
          MetricStat:
            Metric:
              Namespace: AWS/ApplicationELB
              MetricName: HTTPCode_ELB_5XX_Count
              Dimensions:
                - Name: LoadBalancer
                  Value: !GetAtt ApplicationLoadBalancer.LoadBalancerFullName
            Period: 60
            Stat: Sum

  #
  # Logging
  #

  ApiGatewayAccessLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub "/apigateway/${AWS::StackName}/access"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: ApiGatewayAccessLogGroup
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  AccessLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      # checkov:skip=CKV_AWS_18:This is the access logs bucket. It should not log itself.
      BucketName: !Join
        - "-"
        - - !Ref AWS::StackName
          - logs
          - Fn::Select:
              - 4
              - Fn::Split:
                  - "-"
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - /
                          - Ref: AWS::StackId
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-AccessLogs"
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: CheckovRulesToSkip
          Value: CKV_AWS_18

  AccessLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AccessLogsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowLoadBalancerToLogToS3
            Effect: Allow
            Principal:
              AWS: !Sub
                - "arn:${AWS::Partition}:iam::${ElbAccountId}:root"
                - ElbAccountId:
                    !FindInMap [
                      ElasticLoadBalancerAccountIds,
                      !Ref AWS::Region,
                      AccountId,
                    ]
            Action:
              - s3:PutObject
            Resource: !Sub "${AccessLogsBucket.Arn}/AWSLogs/${AWS::AccountId}/*"
            Condition:
              Bool:
                "aws:SecureTransport": true
          - Sid: AllowAwsLogDeliveryToLogToS3
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action:
              - s3:PutObject
            Resource: !Sub "${AccessLogsBucket.Arn}/AWSLogs/${AWS::AccountId}/*"
            Condition:
              StringEquals:
                "s3:x-amz-acl": bucket-owner-full-control
                "aws:SourceAccount": !Ref AWS::AccountId
              Bool:
                "aws:SecureTransport": true
          - Sid: AllowAwsLogDeliveryToReadBucketAcl
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action:
              - s3:GetBucketAcl
            Resource: !GetAtt AccessLogsBucket.Arn
            Condition:
              StringEquals:
                "aws:SourceAccount": !Ref AWS::AccountId
              Bool:
                "aws:SecureTransport": true

  ApiGatewayAccessLogGroupCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref ApiGatewayAccessLogGroup

  #
  # Fargate Task Extra
  #

  TaskLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub "/ecs/${AWS::StackName}/server"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  SessionSecret:
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Name: !Sub "/${AWS::StackName}/Config/Session/Secret"
      Description: !Sub Random password for the ${AWS::StackName} session secret
      GenerateSecretString:
        ExcludeLowercase: false
        ExcludeNumbers: false
        ExcludePunctuation: true
        ExcludeUppercase: false
        IncludeSpace: false
        RequireEachIncludedType: true
        PasswordLength: 32
      KmsKeyId: !GetAtt SecretsKmsKey.Arn
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-SessionSecret"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  SecretsKmsKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Description: !Sub "KMS key used to protect secrets data in ${AWS::StackName}"
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: "secretsmanager.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                aws:SourceArn: !Sub "arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${AWS::StackName}/Config/Session/Secret"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-SecretsKmsKey"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  SecretsKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-SecretsKmsKey"
      TargetKeyId: !GetAtt SecretsKmsKey.Arn

  TxMAPublishErrorDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  QueueKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource:
              - "*"

  QueueKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}/${Environment}/QueueKmsKey"
      TargetKeyId: !Ref QueueKmsKey

  TaskLogGroupCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref TaskLogGroup

  #
  # Logging
  #

  LoggingKmsKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn":
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/ecs/${AWS::StackName}/server"
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/apigateway/${AWS::StackName}/access"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-LoggingKmsKey"
        - Key: service
          Value: ci/cd
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue

  LoggingKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-LoggingKmsKey"
      TargetKeyId: !GetAtt LoggingKmsKey.Arn

  #
  # DynamoDB
  #

  SessionsDynamoDB:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TableName: !Sub ${AWS::StackName}-SessionStore
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        - AttributeName: "user_id" # must match USER_IDENTIFIER_IDX_ATTRIBUTE in ../src/utils/session-store.ts
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: "expires"
        Enabled: true
      BillingMode: PAY_PER_REQUEST
      ContributorInsightsSpecification:
        Enabled: true
      # checkov:skip=CKV_AWS_28: Ignored enable Dynamodb point in time recovery as it is only a short-term cache
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: false
      GlobalSecondaryIndexes:
        - IndexName: "users-sessions" # must match index name in ../src/utils/session-store.ts
          KeySchema:
            - AttributeName: "user_id" # must match USER_IDENTIFIER_IDX_ATTRIBUTE in ../src/utils/session-store.ts
              KeyType: "HASH"
          Projection:
            ProjectionType: KEYS_ONLY
      SSESpecification:
        KMSMasterKeyId: !Ref DynamoDBKmsKey
        SSEEnabled: true
        SSEType: KMS
      TableClass: STANDARD
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: CheckovRulesToSkip
          Value: CKV_AWS_28

  DynamoDBKmsKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Description: !Sub "KMS key used to protect DynamoDB data in ${AWS::StackName}"
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AWS::StackName}-SessionStore"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-DynamoDBKmsKey"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  # What are these KeyAlias used for?
  DynamoDBKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-DynamoDBKmsKey"
      TargetKeyId: !GetAtt DynamoDBKmsKey.Arn

  #
  # App domain
  #

  AppFrontCustomDomain:
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      DomainName: !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
      DomainNameConfigurations:
        - CertificateArn: !Sub "{{resolve:ssm:/${Environment}/Platform/ACM/HostedZone/Certificate/Home/ARN}}"
          EndpointType: REGIONAL
          SecurityPolicy: TLS_1_2
      Tags:
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue

  AppFrontApiRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
      Type: A
      HostedZoneId: !Sub "{{resolve:ssm:/${Environment}/Platform/Route53/HostedZone/Home}}"
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        # see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html#cfn-route53-aliastarget-hostedzoneid
        HostedZoneId: "Z2FDTNDATAQYW2"
        EvaluateTargetHealth: false

  AppFrontApiMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      DomainName: !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
      ApiId: !Ref ApiGateway
      Stage: !Ref ApiDefaultStage
    DependsOn:
      - AppFrontCustomDomain

  #
  # CloudFront Distribution
  #

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
        CNAMEs:
          - !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
        Comment: !Sub "CloudFront Distribution resource for the ${AWS::StackName} application"
        DefaultCacheBehavior:
          AllowedMethods:
            ["GET", "HEAD", "OPTIONS", "PUT", "PATCH", "POST", "DELETE"]
          # CachingDisabled managed cache policy id
          # see https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html#managed-cache-policies-list
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
          OriginRequestPolicyId: !GetAtt CloudFrontOriginRequestPolicy.Id
          Compress: false
          MinTTL: 0
          TargetOriginId:
            !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
          ViewerProtocolPolicy: redirect-to-https
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !Sub "arn:${AWS::Partition}:cloudfront::${AWS::AccountId}:function/TICFFraudHeadersFunction"
        Enabled: true
        HttpVersion: "http2"
        Logging:
          Bucket: !Sub "${CloudFrontLogsBucket}.s3.amazonaws.com"
        Origins:
          - ConnectionAttempts: 3
            ConnectionTimeout: 10
            DomainName: !Sub "${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com"
            Id: !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
            CustomOriginConfig:
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: https-only
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1.2
        ViewerCertificate:
          AcmCertificateArn: !Sub "{{resolve:ssm:/${Environment}/Platform/ACM/Global/Certificate/Home/ARN}}"
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        WebACLId: !Sub "{{resolve:ssm:/${Environment}/Platform/WAF/Global/ACL/ARN}}"
        CacheBehaviors:
          - !If
            - UseCloudFrontCaching
            - PathPattern: "/assets/*"
              AllowedMethods:
                - GET
                - HEAD
              CachePolicyId: !Ref FrontendCachePolicy
              Compress: true
              TargetOriginId:
                !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
              OriginRequestPolicyId: !GetAtt CloudFrontOriginRequestPolicy.Id
              ViewerProtocolPolicy: redirect-to-https
              MinTTL: 0
            - !Ref "AWS::NoValue"
          - !If
            - UseCloudFrontCaching
            - PathPattern: "/public/*"
              AllowedMethods:
                - GET
                - HEAD
              CachePolicyId: !Ref FrontendCachePolicy
              Compress: true
              TargetOriginId:
                !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
              OriginRequestPolicyId: !GetAtt CloudFrontOriginRequestPolicy.Id
              ViewerProtocolPolicy: redirect-to-https
              MinTTL: 0
            - !Ref "AWS::NoValue"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-CloudFrontDistribution"
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  CloudFrontOriginRequestPolicy:
    Type: AWS::CloudFront::OriginRequestPolicy
    Properties:
      OriginRequestPolicyConfig:
        Comment: String
        CookiesConfig:
          CookieBehavior: all
        HeadersConfig:
          HeaderBehavior: allViewerAndWhitelistCloudFront
          Headers:
            - CloudFront-Viewer-Country
            - CloudFront-Viewer-JA3-Fingerprint
            - CloudFront-Viewer-Address
        Name: !Sub "${AWS::StackName}-OriginRequestPolicy"
        QueryStringsConfig:
          QueryStringBehavior: all

  FrontendCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: FrontendCachePolicy
        DefaultTTL: 60
        MaxTTL: 86400
        MinTTL: 0
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          HeadersConfig:
            HeaderBehavior: whitelist
            Headers:
              - CloudFront-Viewer-Country
          QueryStringsConfig:
            QueryStringBehavior: none
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true

  CloudFrontLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      BucketName: !Join
        - "-"
        - - !Ref AWS::StackName
          - cloudfront
          - Fn::Select:
              - 4
              - Fn::Split:
                  - "-"
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - /
                          - Ref: AWS::StackId
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName: !Ref AccessLogsBucket
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-AccessLogs"
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: CheckovRulesToSkip
          Value: CKV_AWS_18

  CloudFrontLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CloudFrontLogsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAwsLogDeliveryToLogToS3
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action:
              - s3:PutObject
            Resource: !Sub "${CloudFrontLogsBucket.Arn}/AWSLogs/${AWS::AccountId}/*"
            Condition:
              StringEquals:
                "s3:x-amz-acl": bucket-owner-full-control
                "aws:SourceAccount": !Ref AWS::AccountId
              Bool:
                "aws:SecureTransport": true
          - Sid: AllowAwsLogDeliveryToReadBucketAcl
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action:
              - s3:GetBucketAcl
            Resource: !GetAtt CloudFrontLogsBucket.Arn
            Condition:
              StringEquals:
                "aws:SourceAccount": !Ref AWS::AccountId
              Bool:
                "aws:SecureTransport": true

  #
  # Metrics and Alarms
  #

  # API Gateway Alarms

  # 4xx Status Code
  ApiGateway4xxStatusAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-ApiGateway4xxStatusAlarm"
      AlarmDescription: "Trigger the alarm when more than 5% of total requests are getting 4xx errors"
      ActionsEnabled: true
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/HighAlertNotificationTopic/ARN}}"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      Threshold: 20
      TreatMissingData: missing
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: errorPercentage
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiId
                  Value: !Ref ApiGateway
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4xx
              Dimensions:
                - Name: ApiId
                  Value: !Ref ApiGateway
            Period: 60
            Stat: Sum

  # 5xx Status Code
  # Alarm should activate when the number of 5xx errors exceeds 5 in the current 24-hour period.
  # Sample every 300 seconds (Period) and check the 288 preceeding sample persiods to cover the last 24 hours
  # 288 * 300 seconds = 86,400 seconds = 24 hours.
  ApiGateway5xxStatusAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-ApiGateway5xxStatusAlarm"
      AlarmDescription: "Activate when 5 5xx events detected in the last 24 hours.  The Alarm will be raised within 300 seconds of the 5xx being raised."
      ActionsEnabled: true
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/HighAlertNotificationTopic/ARN}}"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 20
      TreatMissingData: missing
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: errorPercentage
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiId
                  Value: !Ref ApiGateway
            Period: 300
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5xx
              Dimensions:
                - Name: ApiId
                  Value: !Ref ApiGateway
            Period: 300
            Stat: Sum

  # Latency
  ApiGatewayLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-ApiGatewayLatencyAlarm"
      AlarmDescription: "Trigger the alarm if response latency exceeds 2.5 seconds with the minimum of 10 invocations in 2 out of the last 5 minutes"
      ActionsEnabled: false
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 2500
      TreatMissingData: missing
      Metrics:
        - Id: safeLatency
          Label: safeLatency
          ReturnData: true
          Expression: IF(invocations<10,0,maxLatency)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiId
                  Value: !Ref ApiGateway
            Period: 60
            Stat: Sum
        - Id: maxLatency
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Latency
              Dimensions:
                - Name: ApiId
                  Value: !Ref ApiGateway
            Period: 60
            Stat: Maximum

  #
  # Canary Deployment
  #

  ECSCanaryDeploymentStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: https://template-storage-templatebucket-1upzyw6v9cs42.s3.amazonaws.com/ecs-canary-deployment/template.yaml
      Parameters:
        VpcId: !Sub ${VpcStackName}-VpcId
        PermissionsBoundary:
          Fn::ImportValue: !Sub "${AWS::StackName}-ECSCanaryPermissionsBoundaryArn"
        CodeSigningConfigArn: !If
          - UseCodeSigning
          - !Ref CodeSigningConfigArn
          - !Ref AWS::NoValue
        ECSClusterName: !Ref ECSCluster
        ECSServiceName: !GetAtt ContainerService.Name
        TargetGroupName: !GetAtt ApplicationLoadBalancerTargetGroup.TargetGroupName
        GreenTargetGroupName: !GetAtt ApplicationLoadBalancerTargetGroupGreen.TargetGroupName
        LoadBalancerListenerARN: !Ref ApplicationLoadBalancerListenerHTTPS
        ECSServiceTaskDefinition: !Ref TaskDefinition
        DeploymentStrategy: !If
          - UseCanaryDeployment
          - "CodeDeployDefault.ECSLinear10PercentEvery3Minutes"
          - "CodeDeployDefault.ECSAllAtOnce"
        ContainerName: !Sub "${AWS::StackName}-TaskDefinition"
        ContainerPort: !Ref ContainerPort
        CloudWatchAlarms: !Sub
          - "${ELB5XX10PercentAlarm}"
          - ELB5XX10PercentAlarm: !Ref ELB5XX10PercentAlarm

Outputs:
  ApiGatewayEndpoint:
    Description: The base URI for this application.
    Value: !GetAtt ApiGateway.ApiEndpoint
  CloudFrontDistributionEndpoint:
    Description: The Application URL.
    Value: !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
