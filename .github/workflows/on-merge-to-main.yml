---
name: "Verify & Publish"

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  validate_application:
    name: App Checks
    uses: ./.github/workflows/build-test-application.yml
    secrets: inherit #pragma: allowlist secret

  validate_container:
    name: Container Checks
    uses: ./.github/workflows/validate-docker-image.yml
    secrets: inherit #pragma: allowlist secret
    needs: validate_application

  validate_deployment:
    name: Deployment Template Checks
    uses: ./.github/workflows/validate-sam-template.yml
    secrets: inherit #pragma: allowlist secret
    needs: validate_container

  publish_artifacts:
    name: "Publish Image & Template"
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: validate_deployment
    steps:
      - name: "Push signed image to ECR, updated SAM template wih image then upload it to the S3 Artifact Bucket"
        uses: govuk-one-login/devplatform-upload-action-ecr@224346cd422f5bdfb6b68d0f8e189e55354b2804 # pin@1.4.0
        with:
          artifact-bucket-name: ${{ secrets.ARTIFACT_SOURCE_BUCKET_NAME }}
          container-sign-kms-key-arn: ${{ secrets.CONTAINER_SIGN_KMS_KEY }}
          working-directory: .
          template-file: deploy/template.yaml
          role-to-assume-arn: ${{ secrets.GH_ACTIONS_ROLE_ARN }}
          ecr-repo-name: ${{ secrets.ECR_REPOSITORY }}
          private-docker-registry: khw46367.live.dynatrace.com
          private-docker-login-username: khw46367
          private-docker-login-password: ${{ secrets.DYNATRACE_PAAS_TOKEN }}
      - name: "Delegated Deployment via AWS CodeDeploy"
        run: echo "Deployment has been delegated to AWS CodeDeploy"
      - name: Notify on failure
        if: ${{ failure() && endsWith(github.ref, 'main') }}
        id: slack
        uses: slackapi/slack-github-action@485a9d42d3a73031f12ec201c457e2162c45d02d # pin@v2
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: webhook-trigger
          payload: |
            {
              "channel_id": "${{ secrets.NOTIFICATION_CHANNEL_ID }}",
              "github_repo": "${{ github.repository }}",
              "github_actor": "${{ github.actor }}",
              "github_workflow": "${{ github.workflow }}"
            }
